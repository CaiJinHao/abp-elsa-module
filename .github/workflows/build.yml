name: build and pack

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: ${{github.workspace}}/src/Passingwind.ElsaDesigner/node_modules
          key: ${{ runner.os }}-yarn-cache
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Install Dotnet Tool
        run: dotnet tool install -g Passingwind.Git-CI-Tools

      - name: Set environment variables
        uses: rlespinasse/github-slug-action@3.6.0

      - name: Version check and generate
        run: |
          gitci release changes --output ./changeslog.md
          gitci version next --format json --output ./version.json --build-ver "${{env.GITHUB_SHA_SHORT}}" 
          ls ./

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            src:
              - 'src/**'

      - name: Restore dependencies
        run: dotnet restore Passingwind.Abp.ElsaModule.sln

      - name: Build
        run: dotnet build --no-restore -c Release Passingwind.Abp.ElsaModule.sln

      - name: Pack
        if: steps.changes.outputs.src == 'true'
        run: dotnet pack --no-build --no-restore -c Release /p:Version="${{env.GITCI_NEXT_VERSION}}" -o ./pack_output  Passingwind.Abp.ElsaModule.sln

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: yarn
        run: |
          cd ./src/Passingwind.ElsaDesigner
          yarn

      - name: npm build
        run: |
          cd ./src/Passingwind.ElsaDesigner
          npm run build

      - name: copy build out
        if: steps.changes.outputs.src == 'true'
        run: |
          cd ${{github.workspace}}/src/Passingwind.ElsaDesigner
          zip ${{github.workspace}}/pack_output/workflow-dashboard.zip -r ./dist/*

      - name: Push package
        if: steps.changes.outputs.src == 'true'
        run: dotnet nuget push ./pack_output/*.nupkg --skip-duplicate --api-key ${{secrets.NUGET_TOKEN}} --source https://api.nuget.org/v3/index.json

      - name: Create Release
        if: steps.changes.outputs.src == 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: v${{env.GITCI_NEXT_VERSION}}
          artifacts: ./changeslog*, ./pack_output/*
          bodyFile: ./changeslog.md
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
